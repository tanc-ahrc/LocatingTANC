{
"home": {
	"title": "National Gallery - <b>Simple Site</b> Example",
	"content": "<p>In addition to hosting software and files, as part of development projects, [GitHub|https://github.com] also provides the resources to host dedicated websites, to present and demonstrate ones work. This project has been developed to provide a, <b>relatively<\/b>, simple system for creating a standard set of these webpages, based on a small set of text files, formatted as [JSON|https://www.json.org] files. It was built to work along side a number of other GitHub projects, to provide a method of creating a set of consistent webpages, delivered using [GitHub Pages|https://pages.github.com].</p>\r\n<center>\r\n\t<a href=\"https://github.com/jpadfield/simple-site\">\r\n\t\t<img style=\"position:relative;width:400px;\" src=\"graphics/simple site 01.png\">\r\n\t<\/a>\r\n<\/center>\r\n</br>\r\n<p>The content of the presented webpages are controlled with two main JSON files, augmented by optional additional files, stored in a local <b>build</b> folder.</p>\r\n<ul>\r\n\t<li>Various site wide details are defined within the [site.json|site.json.html] file.</li>\r\n\t<li>The content for the individual web-pages are defined within the [pages.json|pages.json.html] file. With the main pages being listed as tabs, and any sub-pages, or even sub-sub-pages etc, listed within drop-down menus from the related main page tab.</li>\r\n</ul>\r\n<p>The content added to these JSON files is automatically processed every time the files are edited and a new set of webpages will be created.<\/p>\r\n\r\n<div class=\"alert alert-info\" role=\"alert\">\r\n\t<h4 class=\"alert-heading\">Getting Started</h4>\r\n\t<p>[Join GitHub|https://github.com/join] &#8608; [Copy/Fork|https://help.github.com/en/github/getting-started-with-github/fork-a-repo] the repository &#8608; setup your [GitHub Action|https://help.github.com/en/actions] &#8608; Edit the JSON files &#8608; and Enjoy!<\/p>\r\n\t<p>For more information see the [Instructions|instructions.html] page, the [JSON|JSON.html] pages and browse the various examples provided.</p>\r\n</div>",
	"content right": ""
	},
"instructions": {
	"title": "Simple Site - Instructions",
	"content": "<h3>To make use of this system it is recommended that you<\/h3>\r\n<ul>\r\n\t<li>[Join GitHub|https:\/\/github.com\/join]<\/li>\r\n<\/ul>\r\n<p>and then either:<\/p>\r\n<ul>\r\n\t<li>[Copy\/Fork|https:\/\/help.github.com\/en\/github\/getting-started-with-github\/fork-a-repo] the repository, edit the sample JSON files and begin to build your own project.<\/li>\r\n\t<li>[Download\/Clone|https:\/\/help.github.com\/en\/github\/creating-cloning-and-archiving-repositories\/cloning-a-repository] a copy of the repository to your local machine, edit the JSON files as required and then just copy the required folders and files into you own existing repository.<\/li>\r\n<\/ul>\r\n<p>For the full system to work, including the automatic rebuild process you will need to ensure your own repository includes:<\/p>\r\n<ul>\r\n\t<li>A copy of the <b>build<\/b> folder.<\/li>\r\n\t<li>A copy of the <b>docs<\/b> folder.<\/li>\r\n\t<li>A copy of the <b>.github\/workflows\/build.yml<\/b> file setup as a [GitHub Action|https:\/\/help.github.com\/en\/actions].<\/li>\r\n\t<li>A copy of any required licence files.<\/li>\r\n<\/ul>\r\n\r\n<h3>Additional things to check<\/h3>\r\n\r\n<p>Depending on how you copy the files you may also need to check the following issues.<\/p>\r\n\r\n<h4>GitHub Actions<\/h4>\r\n<p>The automatic process of building the pages is controlled by a [GitHub Action|https:\/\/help.github.com\/en\/actions]. If you fork the original repository the GitHUb Action will be copied automatically, if not there is quite a lot of documentation available about setting up a new [GitHub Action|https:\/\/help.github.com\/en\/actions], but the basic steps will require you to:\r\n<ul>\r\n\t<li>Click on the <b>Actions<\/b> option at the top of your repository page.<\/li>\r\n\t<li>Click on the <b>New workflow<\/b> button.<\/li>\r\n\t<li>Click on the <b>Set up a workflow yourself<\/b> button.<\/li>\r\n\t<li>Edit the suggested page name if you want.<\/li>\r\n\t<li>Delete the default text in the edit window that will appear.<\/li>\r\n\t<li>Copy and paste the raw version of [build.yml|https:\/\/raw.githubusercontent.com\/jpadfield\/simple-site\/master\/.github\/workflows\/build.yml] file into the editor.<\/li>\r\n\t<li>Click on the <b>Start commit<\/b> button to save the new workflow.<\/li>\r\n<\/ul>\r\n<p>If you forked the repository this additional setup process may not be required.<\/p>\r\n\r\n<h4>Enabling GitHub Pages<\/h4>\r\n<p>GitHub does not present project web-pages, GitHub Pages, by default, but it is very easy to turn this functionality on. The following steps can be followed when using this project, for more general instructions, or if you want to find more information you should be able to start [here|https:\/\/pages.github.com\/]<\/p>\r\n<ul>\r\n\t<li>This process assumes you have copied the required project files, specifically the <b>docs<\/b> folder.<\/li>\r\n\t<li>Start from your project landing page - for the simple-site project the landing page is [https:\/\/github.com\/jpadfield\/simple-site\/|https:\/\/github.com\/jpadfield\/simple-site\/].<\/li>\r\n\t<li>Click on the <b>Settings<\/b> tab, which should be towards the upper right corner of the page.<\/li>\r\n\t<li>Scroll down until you reach the <b>GitHub Pages<\/b> section.<\/li>\r\n\t<li>Select the <b>master branch \/docs folder<\/b> option in the <b>Source<\/b> dropdown.<\/li>\r\n\t<li>There will be a slight pause and the screen should be updated, with an indication of what your new web-page address will be.<\/li>\r\n\t<li>Your GitHub Pages should no be up and running.<\/li>\r\n<\/ul>\r\n<figure class=\"figure\"><img src=\"graphics\/github pages 01.png\" class=\"figure-img img-fluid rounded\" alt=\"Example screenshots of the GitHub Pages section of the Settings page.\"><figcaption class=\"figure-caption\">Example screenshots of the GitHub Pages section of the Settings page.<\/figcaption><\/figure>\r\n<h3>Dependencies<\/h3>\r\n<p>Once built, simple-site should run without any additional software, all of the basic required [javascript|https:\/\/en.wikipedia.org\/wiki\/JavaScript] files and [css|https:\/\/en.wikipedia.org\/wiki\/Cascading_Style_Sheets] style sheet files are already included, or externally referenced but more information about the main ones can be found at:<\/p>\r\n<ul>\r\n\t<li>[Bootstrap|https:\/\/getbootstrap.com\/]<\/li>\r\n\t<li>[Jquery|https:\/\/jquery.com\/]<\/li>\r\n\t<li>[Project Mirador|https:\/\/projectmirador.org\/]<\/li>\r\n\t<li>[Mermaid|https:\/\/mermaid-js.github.io\/mermaid]<\/li>\r\n<\/ul>\r\n<p>New sets of html pages are created automatically, within GitHub, when the JSON files are edited, controlled by a customised [GitHub Action|https:\/\/help.github.com\/en\/actions], called <b>build.yml<\/b>. However, if you want to be able to run the build process manually within a downloaded version of the repository you will also need to have [PHP|https:\/\/www.php.net\/] installed.<\/p>\r\n<h3>Issues and Comments<\/h3>\r\n<p>Any issues or comments can be added to the Issues section of this GitHub project: [here|https:\/\/github.com\/jpadfield\/simple-site\/issues].<\/p>",
	"content right": ""	
	},
"JSON": {
	"title": "Simple Site - JSON Files",
	"content": "<h3>What is JSON?<\/h3>\r\n<p>JSON stands for <b>J<\/b>ava<b>S<\/b>cript <b>O<\/b>bject <b>N<\/b>otation and is a lightweight format for storing and transporting data. It should be relatively \"self-describing\" and easy to understand[@@https:\/\/www.w3schools.com\/whatis\/whatis_json.asp].<\/p>\r\n\r\n<p>JSON files are organised in comma separated name\/value pairs held within curly brackets, with additional non-named lists held within square brackets. It is also important to ensure that none of the names or values include any newline characters or special JSON characters. There are a large number of websites describing all of the details and rules of the JSON format, but unless you would really like to learn there is a simple solution. If in doubt just copy and paste you name or value text into an online JSON formatting tool and let it do the work[@@https:\/\/en.wikipedia.org\/wiki\/Escape_character] for you, then copy the processed text into your file and move on.<\/p>\r\n\r\n<p>There are many of these tools online, such as:\r\n<ul>\r\n<li>[www.freeformatter.com|https:\/\/www.freeformatter.com\/json-escape.html]<\/li>\r\n<li>[codebeautify.org|https:\/\/codebeautify.org\/json-escape-unescape]<\/li>\r\n<li>Or simply explore [Google|https:\/\/www.google.com\/search?q=escape+json].<\/li>\r\n<\/ul><\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"<b>DataSetName<\/b>\": {\r\n    \"<b>Name<\/b>\": \"Value\",\r\n    \"<b>Another Name<\/b>\": \"Another Value\",\r\n    \"<b>List Name(for example shapes)<\/b>\": [\r\n      {\"shape\": \"square\", \"colour\": \"blue\"},\r\n      {\"shape\": \"circle\", \"colour\": \"red\"},\r\n      {\"shape\": \"triangle\", \"colour\": \"yellow\"}\r\n      ]\r\n  }\r\n}\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">Simplified example of a JSON data object.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>In addition to ensuring that individual name of value texts are correctly processed it is also common, when editing an existing JSON file to make small errors, forgetting a comma, or a double quotes, etc. If your files start to get longer it is often useful just to check that your file is still a valid JSON file before submitting it. As with the escape process above there are a number of free online tools to do this, such as:\r\n<ul>\r\n\t<li>[jsonlint.com|https:\/\/jsonlint.com\/]<\/li>\r\n\t<li>[www.freeformatter.com|https:\/\/www.freeformatter.com\/json-validator.html]<\/li>\r\n\t<li>Or simply explore [Google|https:\/\/www.google.com\/search?q=validate+json].<\/li>\r\n<\/ul><\/p>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Take Care<\/h4><p>Ensure your text values have been correctly [escaped|https:\/\/www.freeformatter.com\/json-escape.html] &#8608; and check your JSON files are [valid|https:\/\/jsonlint.com\/] before submitting them!<\/p><\/div>",
	"content right": ""
	},
"extensions": {
	"title": "Simple Site - <b>Extensions</b>",
	"content": "<h3>Adding further functionality<\/h3>\r\n<p>This project will take a small set of JSON files, process them and produce a formatted set of html webpages. So the next question is, what other processing functions can be added to the system to allow ones GitHub project to host additional tools or even turn a project into a simple virtual research environment.<\/p>\r\n\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">New Opportunities<\/h4><p>What jobs could require consistent processing of simple files of text, or numbers, and then present formatted results in image viewers, graphs, maps, flow charts, etc?<\/p><p>There are lots of great pieces of software out there, so this project is intended to make use of open source libraries rather than creating new ones.<\/p><p>The main question here is, <b>how can researchers, who do not have their own web server, or sufficient coding skills gain access to their own data processing and presentation system?<\/b><\/p><\/div>\r\n\r\n<h3>How it works<\/h3>\r\n<p>As has already been explained, the [page|pages.json.html] JSON file includes two variables that can be used to indicate the inclusion of a page extension.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...  \r\n  \"<b>class<\/b>\": [\"Indicates which project extension to use\"],\r\n  \"<b>file<\/b>\": [\"Indicates the file in which any required extra data can be found\"],\r\n...\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">Extension variables included in the [pages.json|pages.json.html] page object.<\/figcaption>\r\n<\/figure>\r\n<p>Simply, the <b>class<\/b> variable indicates what type of extension should be included and the <b>file<\/b> variable indicates the name of the file that includes any required extra data. The two classes currently available are:\r\n<ul>\r\n<li>The [timeline|timeline.html] class, which can be used to include a formatted [Gantt Chart|https:\/\/en.wikipedia.org\/wiki\/Gantt_chart], using the [Mermaid|https:\/\/mermaid-js.github.io\/mermaid\/#\/] library, to display a simple project timeline.<\/li>\r\n<li>The [mirador|IIIF%20viewer.html] class, which can be used to include an [IIIF|https:\/\/iiif.io\/] images viewer called [Mirador|https:\/\/projectmirador.org\/], to organise and present high resolution images, which are already hosted elsewhere on the web.<\/li>\r\n<\/ul><\/p>\r\n<h4>Positioning the extension content<\/h4>\r\n<p>By default all extension content will be automatically added below the details given in the <b>content<\/b> or <b>content right<\/b> fields. If one would like the content to appear before of even embedded within the details provided by <b>content<\/b> or <b>content right<\/b> then it can be positioned by simply adding <b>[##]<\/b> at the appropriate position. The system will automatically replace <b>[##]<\/b> with the chosen extension content.<\/p>\r\n\r\n<h3>Examples Gallery<\/h3>\r\n\r\n\r\n  <div class=\"row text-center text-lg-left\">\r\n    <div class=\"col-lg-3 col-md-4 col-6\">\r\n      <a href=\"timeline.html\" class=\"d-block mb-4 h-100\">\r\n            <img class=\"img-fluid img-thumbnail\" src=\"graphics\/timeline_thumb.png\" alt=\"\">\r\n          <\/a>\r\n    <\/div>\r\n    <div class=\"col-lg-3 col-md-4 col-6\">\r\n      <a href=\"IIIF%20viewer.html\" class=\"d-block mb-4 h-100\">\r\n            <img class=\"img-fluid img-thumbnail\" src=\"graphics\/mirador_thumb.png\" alt=\"\">\r\n          <\/a>\r\n    <\/div>    \r\n  <\/div>",
	"content right": ""		
	},
"example": {
	"title": "Simple Site Example",
	"content": "<h3>An additional local title can be added</h3><br/><p>This is an example of a small set of related html pages created automatically based on a set of three JSON[@@https://www.json.org] files. This example includes simple text, some basic html code and even some additional Bootstrap options. Please note you can simply just use text, the more complex options are just here as an example.</p><div style=\"text-align:center;\"><a class=\"btn btn-outline-primary nav-button\" style=\"left:80px;\" id=\"nav-models\" role=\"button\" href=\"./\">Example Button</a></div><br/><p>Button or images or any html markup can be added in to form the bulk of the content[@@Here we could place a lot more detail about this issue] and then presented as a simple html page on Github[@@https://github.com/]</p><div class=\"alert alert-info\" role=\"alert\"><h4>For the adventurous you can also use other [Bootstrap|https://getbootstrap.com/] functions</h4><p>Extra Bootstrap classes can be used to add colours and emphasis as required.</p></div>",
	"content right": "<p>Additional information[@@This extra foot note should be automatically positioned under the second column] easily be added as a second column without the need for more complex html and even add in an image if required:</p><figure class=\"figure\"><img src=\"https://media.ng-london.org.uk/iiif/009-01DZ-0000/full/512,/0/default.jpg\" class=\"figure-img img-fluid rounded\" alt=\"Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors').\"><figcaption class=\"figure-caption\">Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors') \u00a9 The National Gallery, London. Bought, 1890. This image is licensed under [CC-BY-NC-ND 4.0|https://creativecommons.org/licenses/by-nc-nd/4.0/].</figcaption></figure>"
	},
"about": {
	"title": "Simple Site - <b>About</b>",
	"content": "<div class=\"alert alert-info\" role=\"alert\"><h4>Simple Site Collaborations<\/h4><p>The Simple Site project has developed out of work from a number of different projects, all of which involved some aspect of developing project websites, or documented methods of disseminating formatted data. This work will continue across the listed projects but further collaborations are anticipated.<\/p><\/div>\r\n\r\n<h3>Acknowledgement<\/h3>\r\n\r\n<p>This project has been directly supported by the following projects:<\/p>\r\n\r\n<h4>The SSHOC Project<\/h4>\r\n<figure class=\"figure\">\t\r\n  <img style=\"height:64px;\" src=\"graphics\/sshoc-logo.png\" class=\"figure-img img-fluid rounded\" alt=\"The SSHOC Project\">\r\n  <img style=\"height:32px;\" src=\"graphics\/sshoc-eu-tag2.png\" class=\"figure-img img-fluid rounded\" alt=\"The SSHOC Project\">\r\n  <figcaption class=\"figure-caption\">Social Sciences & Humanities Open Cloud (SSHOC)is a project funded by the EU framework programme Horizon 2020 and unites [20 partner organisations and their 27 associates|https:\/\/www.sshopencloud.eu\/partners] in developing the social sciences and humanities area of the [European Open Science Cloud (EOSC)|http:\/\/www.eosc-portal.eu\/] - [SSHOC|https:\/\/www.sshopencloud.eu\/]<\/figcaption>\r\n<\/figure>\r\n\r\n<h4>The ARTICT Project<\/h4>\r\n<figure class=\"figure\">\r\n  <img style=\"height:64px;\" src=\"graphics\/UKRI_EPSR_Council-Logo_Horiz-RGB.png\" class=\"figure-img img-fluid rounded\" alt=\"The ARTICT Project\">\r\n  <figcaption class=\"figure-caption\">EPSRC funded - ARTICT | Art Through the ICT Lens: Big Data Processing Tools to Support the Technical Study, Preservation and Conservation of Old Master Paintings - [ARTICT|https:\/\/research.ng-london.org.uk\/external\/ARTICT]<\/figcaption>\r\n<\/figure>\r\n\r\n<h4>The IIIF - TANC Project<\/h4>\r\n<figure class=\"figure\">\r\n  <img style=\"height:64px;\" src=\"graphics\/TANC - IIIF.png\" class=\"figure-img img-fluid rounded\" alt=\"IIIF - TANC\">\r\n  <figcaption class=\"figure-caption\">AHRC funded - IIIF-TNC | Practical applications of IIIF as a building block towards a digital National Collection -   [IIIF - TNC|https:\/\/tanc-ahrc.github.io\/IIIF-TNC]<\/figcaption>\r\n<\/figure>\r\n\r\n<h4>The HeritagePIDs Project<\/h4>\r\n<figure class=\"figure\">\r\n  <img style=\"height:64px;\" src=\"graphics\/TANC - PIDS.png\" class=\"figure-img img-fluid rounded\" alt=\"PIDS - TANC\">\r\n  <figcaption class=\"figure-caption\">AHRC funded - HeritagePIDs | Persistent Identifiers as IRO Infrastructure - [HeritagePIDs|https:\/\/tanc-ahrc.github.io\/HeritagePIDs]<\/figcaption>\r\n<\/figure>",
	"content right": ""		
	},
"site.json": {
		"parent": "JSON",
		"title": "Simple Site - The <b>site.json</b> file",
		"content": "<p>The <b>site.json<\/b> file is used to control a few of the more structural aspects of the web pages and relates to all of the pages that will be produced. It's content falls into three main parts: the meta, logos & links, and extras sections. The easiest method of creating your own <b>site.json<\/b> file is to copy the existing one that is provided with the project code and just edit it as needed. The sections shown below are cropped from a full file and contain descriptions rather than real values, for an example of real code please see this example [site.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/site.json] file.<\/p>\r\n\r\n<h4>The Meta values<\/h4>\r\n<p>'Meta elements are tags used in HTML and XHTML documents to provide structured metadata about a Web page'[@@For more details see: https://en.wikipedia.org/wiki/Meta_element]. They are used to defined a selection of hidden information which can be used by search engines and web browsers. At this time this project only makes use of 5 of these meta elements, further values could be added if required but this would require making adjustments to the project code rather than just the JSON file.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"metaDescription\": \"Short project description, this can be used and presented by search engines\",\r\n  \"metaKeywords\": \"Used to help tag what your project is related to, this will assist search engines to find your project\",\r\n  \"metaAuthor\": \"Author Name|Author Email Address|Further Institutional Information as required\",\r\n  \"metaTitle\": \"Simple short title For Your website or project, which can be display in browser tabs\",\r\n  \"metaFavIcon\": \"URL for your chosen favicon.ico file (https:\/\/en.wikipedia.org\/wiki\/Favicon)\",\r\n...\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<h4>Logos & Links<\/h4>\r\n<p>As can be seen from the figure below the values in this section are reasonably straight forward and directly relate to the images and links that will appear on every page. These values are all optional and can be left blank, particularly the <b>extra_logos<\/b> details, but it is recommend that you do add an appropriate main logo and the required licence details.<\/p>\r\n\r\n<figure>\t\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"logo_link\": \"The URL you would like the top left logo to point to a default would be \\\".\/\\\" which would point to the home page of your project.\",\r\n  \"licence\": \"Clickable links\/icons of indicating the relevant licence or re-use restrictions of your project\",\r\n  \"logo_path\": \"The full path or URL to the image you would like to appear in the top left corner\",\r\n  \"footer\": \"Optional copy right statement or link you would like to appear on the bottom left of the page \",\r\n  \"extra_logos\": {\r\n    \"1st Logo\": {\r\n      \"link\": \"The clickable link for this specific logo\",\r\n      \"logo\": \"The full path or URL for the required logo image file.\",\r\n      \"alt\": \"Optional first extra logo related to the project\"\r\n    },\r\n    \"2nd Logo\": {\r\n      \"link\": \"The clickable link for this specific logo\",\r\n      \"logo\": \"The full path or URL for the required logo image file.\",\r\n      \"alt\": \"Optional second extra logo related to the project\"\r\n    }\r\n  },\r\n...\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<center><figure class=\"figure\"><img src=\"graphics\/site-json.png\" class=\"figure-img img-fluid rounded\" alt=\"site.json image\"><figcaption class=\"figure-caption\">Annotated image highlighting which sections of the page are connected to each of the Logos & Links values.<\/figcaption><\/figure><\/center>\r\n\r\n<h4>Extra JS & CSS Code<\/h4>\r\n<p>For most simple projects the last section of values can be simply left blank as they are only required if more advanced users would like to add additional functionality or styling.<\/p>\r\n\r\n<figure>\r\n<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"extra_js_scripts\": [\"A comma separated list of any additional javascript files that need to be included\"],\r\n  \"extra_css_scripts\": [\"A comma separated list of any additional css style sheets that need to be included\"],\r\n  \"extra_css\": \"Any additional css code that you need to be directly added to all of the pages\",\r\n  \"extra_js\": \"Any additional javascript code that you need to be directly added to all of the pages\"\r\n}\r\n<\/code><\/pre><\/figure>",
	"content right": ""
		},
	"pages.json": {
		"parent": "JSON",
		"title": "Simple Site - The <b>pages.json</b> file",
		"content": "<p><b>As noted on the main [JSON|JSON.html] page you will need to ensure that your pages.json file is valid JSON, please ensure all double quotes <i>in your added text<\/i> have a <i>&#47;<\/i> in front, like this <i>&#47;&#34;<\/i>, also please ensure that you text is all on one line, with no <i>newlines<\/i>.<\/b><\/p>\r\n\r\n<p>The <b>pages.json<\/b> file is used to define the actual content for your web pages. The file is made up of one or more page objects, an example of which is shown below. The meaning of these fields are relatively straightforward, as described below, though some additional notes are provided below, for an example of real code please see this example [pages.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/pages.json] file.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n\"<b>pageName<\/b>\": {\r\n  \"<b>title<\/b>\": \"Simple text title\",\r\n  \"<b>content<\/b>\": \"Main page content, this can be added as simple text of can include more complex html as required.\",\r\n  \"<b>content right<\/b>\": \"Optional second column of text if required.\",\r\n  \"<b>parent<\/b>\": \"Optional variable only used to indicate a relationship between a sub-page and a parent page - the pageName of the page, or sub-page above this one\",\r\n  \"<b>class<\/b>\": \"Optional variable only used for extension pages, normally leave blank or omit completely\",\r\n  \"<b>file<\/b>\": \"Optional variable only used for extension pages, normally leave blank or omit completely\",\r\n  },\r\n\"<b>AnotherPageName<\/b>\": {\r\n  \"<b>title<\/b>\": \"Another simple text title\",\r\n  \"<b>content<\/b>\": \"Unique page content, this will be different for each page.\",\r\n  \"<b>content right<\/b>\": \"\"\r\n  }\r\n}\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">Simplified example of two page objects, with the variable names highlighted in bold.<\/figcaption>\r\n<\/figure>\r\n<p>Each of the values within an object can include simple text information or more complex html, however you must ensure that you follow guidelines included of the main [JSON|JSON.html] page. The parent field allows you to nest pages under other pages, starting with one of the main pages, but you can then nest sub-sub-pages under sub-pages and so on if really required.<\/p>\r\n\r\n<p>The <b>parent<\/b> field allows you to nest pages under other pages, starting with one of the main pages, but you can then nest sub-sub-pages under sub-pages and so on if really required. The <b>class<\/b> and <b>file<\/b> fields are only used for extensions to the simple-site system and more information can be found [here|extensions.html].<\/p>\r\n\r\n<p>In addition to standard html coding some additional options have been added to make life easier. These do not need to be used if not needed.<\/p>\r\n<ul>\r\n\t<li><b>Adding footnotes<\/b>: Locate footnotes references in your text using <b>&#91;&#64;&#64;Followed by the text of the actual footnote&#93;<\/b>, see the example below. These will all be automatically processed so that all of the footnotes added to the <b>content<\/b> or <b>content right<\/b> are numbered correctly and clickable.<\/li>\r\n\t<li>Adding links: Links can be added to any word or phrase simply by enclosing them in square brackets, separated with a pipe character: <b>&#91;Display text|https:\/\/full.url.com&#93;<\/b><\/li>\r\n<\/ul>\r\n\r\n<h3>Breadcrumb navigation for sub-pages<\/h3>\r\n\r\n<p>Sub-pages are not given there own tabs, as the main pages are, they are nested in dropdown menus below their parent main page. To make it easier to navigate back up a series of nested sub pages an additional [breadcrumb navigation bar|https:\/\/en.wikipedia.org\/wiki\/Breadcrumb_navigation] is automatically added to all sub-pages, as shown below.<\/p>\r\n\r\n<figure class=\"figure\"><img src=\"graphics\/breadcrumb-example.png\" class=\"figure-img img-fluid rounded\" alt=\"An example of the extra breadcrumb navigation used within sub-pages.\"><figcaption class=\"figure-caption\">An example of the extra breadcrumb navigation used within sub-pages.<\/figcaption><\/figure>\r\n\r\n<h3>Example page objects<\/h3>\r\n<p>This page object was used to define the content of the [Example|example.html], one of the actual pages within this demonstration site.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n\"example\": {\r\n  \"title\": \"Simple Site Example\",\r\n  \"content\": \"&lt;h3&gt;An additional local title can be added&lt;\/h3&gt;&lt;br\/&gt;&lt;p&gt;This is an example of a small set of related html pages created automatically based on a set of three JSON&#91;&#64;&#64;https:\/\/www.json.org&#93; files. This example includes simple text, some basic html code and even some additional Bootstrap options. Please note you can simply just use text, the more complex options are just here as an example.&lt;\/p&gt;&lt;div style=\\\"text-align:center;\\\"&gt;&lt;a class=\\\"btn btn-outline-primary nav-button\\\" style=\\\"left:80px;\\\" id=\\\"nav-models\\\" role=\\\"button\\\" href=\\\".\/\\\"&gt;Example Button&lt;\/a&gt;&lt;\/div&gt;&lt;br\/&gt;&lt;p&gt;Button or images or any html markup can be added in to form the bulk of the content&#91;&#64;&#64;Here we can place a lot more detail about this issue&#93; and then presented as a simple html page on Github&#91;&#64;&#64;https:\/\/github.com\/&#93;&lt;\/p&gt;&lt;div class=\\\"alert alert-info\\\" role=\\\"alert\\\"&gt;&lt;h4&gt;For the adventurous you can also use other &#91;Bootstrap|https:\/\/getbootstrap.com\/&#93; functions&lt;\/h4&gt;&lt;p&gt;Extra Bootstrap classes can be used to add colours and emphasis as required.&lt;\/p&gt;&lt;\/div&gt;\",\r\n  content right\": \"&lt;p&gt;Additional information &#91;&#64;&#64;This extra foot note should be automatically positioned under the second column&#93; easily be added as a second column without the need for more complex html and even add in an image if required:&lt;\/p&gt;&lt;figure class=\\\"figure\\\"&gt;&lt;img src=\\\"https:\/\/media.ng-london.org.uk\/iiif\/009-01DZ-0000\/full\/512,\/0\/default.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors').\\\"&gt;&lt;figcaption class=\\\"figure-caption\\\"&gt;Hans Holbein the Younger, Jean de Dinteville and Georges de Selve ('The Ambassadors') \\u00a9 The National Gallery, London. Bought, 1890. This image is licensed under &#91;CC-BY-NC-ND 4.0|https:\/\/creativecommons.org\/licenses\/by-nc-nd\/4.0\/&#93;.&lt;\/figcaption&gt;&lt;\/figure&gt;\"\r\n  }\r\n}\r\n<\/code><\/pre>\r\n<\/figure>\r\n\r\n<p>This second page object was used to define the content of the [example subpages|example-subpage-01.html], one of the actual pages within this demonstration site.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n&quot;example-subpage-01&quot;: {\r\n  &quot;parent&quot;: &quot;example&quot;,\r\n  &quot;title&quot;: &quot;More detail might be needed in some areas&quot;,\r\n  &quot;content&quot;: &quot;&lt;p&gt;Sub pages can be set up to provide additional content without adding to the list of tabs at the top of the page. These are nested using a simple parent child relationship.&lt;\/p&gt;&quot;,\r\n  &quot;content right&quot;: &quot;&lt;img style=\\&quot;position:relative;width:100%;\\&quot; src=\\&quot;graphics\/example_knowledge_graph.png\\&quot;\/&gt;&quot;\r\n  }\r\n}\r\n<\/code><\/pre>\r\n<\/figure>",
	"content right": ""
		},	
	"example-subpage-01": {
		"parent": "example",
		"title": "More detail might be needed in some areas",
		"content": "<p>Sub pages can be set up to provide additional content without adding to the list of tabs at the top of the page. These are nested using a simple parent child relationship.</p>",
	  "content right": "<img style=\"position:relative;width:100%;\" src=\"graphics/example_knowledge_graph.png\"/>"
		},
	"example-subpage-02": {
		"parent": "example",
		"title": "Another example of a simple sub page",
		"content": "<p>Donec sollicitudin molestie malesuada. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Cras ultricies ligula sed magna dictum porta. Donec rutrum congue leo eget malesuada.</p>",		
	  "content right": ""
		},
	"example-sub-subpage-01": {
		"parent": "example-subpage-01",
		"title": "Probably not needed - more nesting",
		"content": "<p>As the relationships work on a simple parent child structure more and more pages can be nested as required.</p>",
		"content right": ""
		},
	"example-sub-sub-subpage-01": {
		"parent": "example-sub-subpage-01",
		"title": "Probably not needed - but even more nesting",
		"content": "<p>Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Donec rutrum congue leo eget malesuada. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Donec sollicitudin molestie malesuada. Cras ultricies ligula sed magna dictum porta. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus. Nulla porttitor accumsan tincidunt. Nulla quis lorem ut libero malesuada feugiat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec velit neque, auctor sit amet aliquam vel, ullamcorper sit amet ligula.</p>",
  	"content right": ""
		},
	"timeline": {
		"parent": "extensions",
		"class": "timeline",
		"file": "timeline.json",
		"title": "Simple Site - The <b>Timeline Extension</b>",
		"content": "<p>This extension uses the [Mermaid|https:\/\/mermaid-js.github.io\/mermaid\/#\/] library to produce a customised timeline gantt chart. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>timeline<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the timeline data as shown below.<\/p><\/div>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...  \r\n  \"<b>timeline<\/b>\": {\r\n    \"<b>parent<\/b>\": \"extensions\",\r\n    \"<b>class<\/b>\": \"timeline\",\r\n    \"<b>file<\/b>\": \"timeline.json\",\r\n    \"<b>title<\/b>\": \"Simple Site - The &lt;b&gt;Timeline Extension&lt;\/b&gt;\",\r\n    \"<b>content<\/b>\": \"&lt;p&gt;This extension uses the &#91;Mermaid|https:\/\/mermaid-js.github.io\/mermaid\/#\/&#93; library to produce a customised timeline gantt chart. It is an example of a special page that can be added to the ... \",\r\n    \"<b>content right<\/b>\": \"\"\t\t\r\n\t}\r\n...\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">Simplified version of the JSON object used to describe this page.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>timeline.json<\/b> will be processed to add a formatted timeline to the page.<\/p>\r\n\r\n<h3>Timeline JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the timeline data needs to be organised in a series of JSON objects, an example of which is provided below, for an example of real code please see the [timeline.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/timeline.json] file.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"<b>project<\/b>\": \"Simple title for time line\",\r\n  \"<b>start date<\/b>\": \"Start date of your project in the 2020-12-31 format\",\r\n  \"<b>margin<\/b>\": -3, \/* negative number of months - adds a margin to the left of your timeline to leave room for the group titles.*\/\r\n...\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">The top three variable required in the timeline JSON file.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The rest of the data within the JSON file relates to a series of event organised in <b>groups<\/b>, it is ok just to have a single group, but the system automatically applies different background colours to each group, which allows an easy method of breaking up or organising a longer list of events. Each is identified with a unique short tag, and then within each individual group you have a group title and list of events called <b>stages<\/b>.<\/p>\r\n\r\n<p>Each stage is made up of four unnamed variables which equate to:\r\n<ul>\r\n<li>The display text that describes the particular stage or event<\/li>\r\n<li>An optional styling class - at this time only three options are used in the example below;\r\n<ul>\r\n<li><b>\"\"<\/b>: (basically empty) a mid blue with a dark blue outline<\/li>\r\n<li><b>\"crit\"<\/b>: a red with a lighter read outline<\/li>\r\n<li><b>\"crit, active\"<\/b>: a lighter blue with a red outline.<\/li>\r\n<\/ul><\/li>\r\n<li>The start of the event: given in a number of months from the start date, or a number of months and days if formatted as \"3,3\" - three months and three days.<\/li>\r\n<li>The end of the event: given in a number of months from the start date, or a number of months and days if formatted as \"3,3\" - three months and three days.<\/li>\r\n<\/ul><\/p>\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>\r\n... \r\n  \"<b>groups<\/b>\": { \r\n    \"<b>tag1<\/b>\": {\r\n      \"<b>title<\/b>\": \"Tag1 Title\",\r\n      \"<b>stages<\/b>\" : [\r\n        [\"Text string describing the stage\", \"\", 1, 2],\r\n        [\"Text string describing a critical stage\", \"crit\", 2, 4],\r\n        [\"Text string describing an active stage\", \"crit, active\", 3, 8]\r\n      ]}\r\n    }\r\n...\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">The first few objects in the [JSON file|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/timeline.json] used to describe the example timeline are shown below.<\/figcaption>\r\n<\/figure>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"<b>project<\/b>\": \"Simple Site Time Line Example\",\r\n  \"<b>start date<\/b>\": \"2020-02-01\",\r\n  \"<b>margin<\/b>\": -3,\r\n  \"<b>groups<\/b>\": {\r\n    \"<b>int<\/b>\": {\r\n      \"<b>title<\/b>\": \"Initial discussion and planning\",\r\n      \"<b>stages<\/b>\" : [\r\n        [\"Literature\/website\/software review\", \"\", 2, 8],\r\n        [\"Establish communications, collaborative environments and links with related interest groups\",\t\"\", 0, 4],\t\t\t\t\r\n        [\"Recruit Project Researcher\", \"crit\", \"3,3\", 6],\r\n        [\"Project Researcher In Post\", \"crit\", 6, 21]\r\n      ]},\r\n    \"<b>ws<\/b>\": {\r\n      \"<b>title<\/b>\": \"Workshops\",\r\n       \"<b>stages<\/b>\": [\r\n        [\"Organise Workshop 1\", \"\", 2, \"5,20\"],\r\n        [\"Workshop 1 - The Beginning\", \"crit\", \"5,20\", \"5,21\"],\r\n        [\"Organise Workshop 2\",\t\"\", 6, 9],\r\n        [\"Workshop 2 - The Middle\", \"crit, active\", 9, 10],\r\n        [\"Organise Workshop 3 \u2013 Document available resources and development ideas\", \"\", 10, 18],\r\n        [\"Workshop 3 - The End\", \"crit, active\", 18, 19]\r\n      ]},\r\n\t\t\t\r\n...\r\n\r\n    }\r\n  }\r\n<\/code><\/pre><figcaption class=\\\"figure-caption\\\">The first few objects in the [JSON file|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/timeline.json] used to describe the example timeline.<\/figcaption>\r\n<\/figure>",
		"content right": ""		
	},
	"IIIF viewer": {
		"parent": "extensions",
		"class": "mirador",
		"file": "mirador.json",
		"title": "Simple Site - The <b>IIIF Mirador Extension</b>",
		"content": "<p>This extension uses the [IIIF|https:\/\/iiif.io] image viewer [Mirador|https:\/\/projectmirador.org\/] to produce a customised presentation of a bespoke selection of IIIF manifests[@@IIIF manifests are simply a structured list of web based images resources that can be viewed in a IIIF compliant viewer, for more details see https:\/\/iiif.io\/api\/presentation\/2.1\/#table-of-contents]. It is an example of a special page that can be added to the [pages.json|pages.json.html] file.<\/p>\r\n\r\n<h3>The Example<\/h3>\r\n[##]\r\n<br\/>\r\n<h3>Summary<\/h3>\r\n<div class=\"alert alert-info\" role=\"alert\"><h4 class=\"alert-heading\">Extension Variables<\/h4><p>For this extension to work the <b>class<\/b> variable needs to be set to <b>mirador<\/b> and the <b>file<\/b> variable needs to give the name of the additional json file including the IIIF manifest list data as shown below.<\/p><\/div>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...  \r\n  \"<b>timeline<\/b>\": {\r\n    \"<b>parent<\/b>\": \"extensions\",\r\n    \"<b>class<\/b>\": \"mirador\",\r\n    \"<b>file<\/b>\": \"mirador.json\",\r\n    \"<b>title<\/b>\": \"Simple Site - The &lt;b&gt;IIIF Mirador Extension&lt;\/b&gt;\",\r\n    \"<b>content<\/b>\": \"&lt;p&gt;This extension uses the &#91;IIIF|https:\/\/iiif.io&#93; to produce a customised presentation of a bespoke selection of &#91;IIIF manifests ... \",\r\n    \"<b>content right<\/b>\": \"\"\t\t\r\n\t}\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">Simplified version of the JSON object used to describe this page.<\/figcaption>\r\n<\/figure>\r\n\r\n<p>The details included in the <b>content<\/b> and <b>content right<\/b> variable will be presented as [previously described|pages.json.html], however the data included in the named file, in this case <b>mirador.json<\/b> will be processed to add a populated MIrador image viewer to the page.<\/p>\r\n\r\n<h3>Mirador JSON file<\/h3>\r\n\r\n<p>As with the other JSON files the mirador data needs to be organised in a series of JSON objects, an example of which is provided below, for an example of real code please see the [mirador.json|https:\/\/github.com\/jpadfield\/simple-site\/blob\/master\/build\/mirador.json] file. The expected data can be split into two parts, the first is required and the second, more complex section is optional.<\/p>\r\n\r\n<h4>Section one - <b>manifests<\/b> object<\/h4>\r\n\r\n<p>This object is composed of a simple list of a pair of values for each manifest, the actual URI for the manifest and an indication on where each manifest is from. If only the manifests object is provided Mirador is setup to autoload in the first image of the first manifest.<\/p>\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"<b>manifests<\/b>\": [\r\n    {\r\n    \"<b>manifestUri<\/b>\": \"https:\/\/web.address\/of\/a\/manifest you want to include\",\r\n    \"<b>location<\/b>\": \"Where the manifest if from (Institution Name)\"},\r\n    {\r\n    \"<b>manifestUri<\/b>\": \"https:\/\/you.can.include\/a\/number\/of\/manifests\/as\/required \",\r\n    \"<b>location<\/b>\": \"Great Museum\"}\t\t\r\n    ]\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">A commented example of a manifests object with two manifests listed.<\/figcaption>\r\n<\/figure>\r\n<br\/>\r\n<h4>Section two - the <b>windows<\/b> object<\/h4>\r\n<p>As noted above this section is optional, it can also be a bit more complex. THis object id intended to allow users to make use of some of the standard Mirador options to define which manifests and images are automatically loaded into the viewer and how they are arranged.<\/p>\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>...\r\n  \"<b>windows<\/b>\": {\r\n    \"<b>layout<\/b>\": \"viewer grid dimension, rows x columns: default value is <b>1x1<\/b>\",\r\n    \"<b>slots<\/b>\": [\r\n      {\r\n      \"<b>loadedManifest<\/b>\": \"URI of the manifest, from the included list, that you would like to load into a given slot by default\",\r\n      \"<b>slotAddress<\/b>\":\"The position of this window, given in the form <b>row1.column2<\/b> etc. - for single image views just use <b>row1<\/b>\",\r\n      \"<b>viewType<\/b>\": \"The type of presentation, enter one of <b>ThumbnailsView<\/b>, <b>ImageView<\/b>, <b>ScrollView<\/b>, <b>BookView<\/b>\",\r\n      \"<b>canvasID<\/b>: \"More complex and optional - Define the URI of a specific image ID taken from the given manifest URI, (these IDs can be found by opening up the manifest in a text editor).\"}\r\n    ]}\r\n...\r\n<\/code><\/pre><figcaption class=\"figure-caption\">A commented version of a windows object with a single slot defined. More information about these various values can be found on the main [Mirador webpage|https:\/\/github.com\/ProjectMirador\/mirador\/wiki\/Configuration-Guides].<\/figcaption>\r\n<\/figure>\r\n<br\/>\r\n<h4>A full example<\/h4>\r\n<p>The following code is copy of the actual JSON file used to create the example viewer shown above.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>{\r\n  \"manifests\": [\r\n    { \"manifestUri\": \"https:\/\/iiif.harvardartmuseums.org\/manifests\/object\/299843\", \"location\": \"Harvard University\"},\r\n    { \"manifestUri\": \"https:\/\/media.nga.gov\/public\/manifests\/nga_highlights.json\", \"location\": \"National Gallery of Art\"}\t\t\r\n    ],\r\n  \"windows\": {\r\n    \"layout\": \"1x2\",\r\n    \"slots\": [\r\n    {\r\n    \"loadedManifest\": \"https:\/\/media.nga.gov\/public\/manifests\/nga_highlights.json\",\r\n    \"slotAddress\":\"row1.column1\",\r\n    \"viewType\": \"ImageView\",\r\n    \"canvasID\":\"https:\/\/media.nga.gov\/public\/manifests\/canvas\/52178.json\"\r\n    },\r\n    {\r\n    \"loadedManifest\": \"https:\/\/iiif.harvardartmuseums.org\/manifests\/object\/299843\",\r\n    \"slotAddress\":\"row1.column2\",\r\n    \"viewType\": \"ImageView\"}\r\n    ]}\r\n}\r\n<\/code><\/pre><figcaption class=\"figure-caption\">A full version of a mirador.json file, including two manifests and two window slots.<\/figcaption>\r\n<\/figure>\r\n\r\n<h3>Mirador Text file<\/h3>\r\n\r\n<p>Although the JSON format described above is preferred and provides additional functions, in order to make this extension as simple an accessible as possible, it is also possible to provide details of required manifests as simple text list, with one manifest per line.<\/p>\r\n\r\n<figure>\r\n\t\t<pre style=\"overflow: hidden;border: 2px solid black;padding: 10px;\">\r\n<code>https:\/\/manifests.britishart.yale.edu\/manifest\/34\r\nhttps:\/\/iiif.harvardartmuseums.org\/manifests\/object\/299843\r\nhttps:\/\/media.nga.gov\/public\/manifests\/nga_highlights.json\r\n<\/code><\/pre><figcaption class=\"figure-caption\">An example of the simplest way of passing manifests to simple-site page builder, a simple list of manifest urls saved as a text file with one manifest url per line.<\/figcaption>\r\n<\/figure>",
		"content right": ""		
	}
}
